"0",""
"0","# Load the tidyverse package to get our usual suite of powerful data-wranglin', piping, plotting, and otherwise immensely useful toolkits."
"0","library(tidyverse)"
"0",""
"0","# Load rvest to do webscraping."
"0","library(rvest)"
"0",""
"0","# Aim our scraper at the main URL for the ASB""s ""ASOP Table of Contents"" page and read in HTML source content as a very large string value"
"0","asb_main_landing_url <- ""http://www.actuarialstandardsboard.org/standards-of-practice/"""
"0","asb_main_landing_html <- read_html(asb_main_landing_url)"
"0",""
"0","# Using SelectorGadget, I've identified the hyperlinks to all the 56 ASOP's from this page"
"0","asop_links <- html_nodes(asb_main_landing_html, "".item-meta-links a:nth-child(1)"")"
"0",""
"0","# asop_links is a list object of 56 hypertext tags to the 56 published ASOPs that are either in effect, repealed, or soon-to-be-effective (including the new Modeling ASOP!)"
"0",""
"0","# Now we parse the markup to get to 56 unique URL string values corresponding with the href attribute contained in our 56-element list of <a> tags"
"0","asop_urls <- html_attrs(asop_links)"
"0",""
"0","# While we're at it, we're going to want to make sure we have our ontological ducks in a row when it comes time to organize the data. So, let's stand up a quick reference tibble that assigns ASOP numbers to ASOP links."
"0","asop_table <- asop_urls %>% "
"0","  tibble(asop_urls = unlist(.)) %>% "
"0","  mutate(asop_number = row_number()) "
"0",""
"0","# Let's get titles now and build this into our data table"
"0","asop_titles <- html_nodes(asb_main_landing_html, ""h4"") %>% "
"0","  html_text(trim=T)"
"0",""
"0","asop_table <- asop_titles %>% "
"0","  tibble(asop_title = .) %>% "
"0","  mutate(asop_number = row_number()) %>% "
"0","  inner_join(asop_table)"
"2","Joining, by = ""asop_number"""
"0","  "
"0","# the last line of this chain is an inner- instead of left-join - the purpose here is to shed some none-ASOPs that we picked up in our scrape that are rendered under <h4> HTML tags."
"0",""
"0","# Finally, actually cracking open the source can reveal more info than SelectorGadget, sometimes. Here I see a <div class> named .item-meta that can get me the category/categories of the ASOP, as well as the date of adoption and adoption status."
"0",""
"0","# To package all this meta-data up the tidy way, we'll lean on purrr"
"0","library(purrr)"
"0","library(stringr)"
"0","library(lubridate)"
"0",""
"0","# Bear with me, this is kind of a mess and there might be a better way to do this, but here we go!"
"0","asop_meta <- html_nodes(asb_main_landing_html, "".item-meta"")"
"0","asop_meta_content <- html_children(asop_meta) %>% "
"0","  map(html_text) %>% "
"0","  enframe() %>% "
"0","  filter(str_sub(value, 1, 4) != ""View"") %>% "
"0","  separate(value, into=c(""meta_key"", ""meta_value""), sep="": "") %>% "
"0","  mutate(asop_number = ceiling(name/4)) %>% "
"0","  select(-name) %>% "
"0","  pivot_wider(names_from=meta_key, values_from=meta_value)"
"0",""
"0","#Category is delimited on spaces, so we need to break that up. The status field has the same value all the way down, so let's ditch it. And to make this super pliable, we'll just arrange the categories as boolean fields."
"0",""
"0","asop_metadata <- asop_meta_content %>% "
"0","  select(-Status) %>% "
"0","  ungroup() %>% "
"0","  mutate(category.health = str_detect(Category, ""Health""),"
"0","         category.life = str_detect(Category, ""Life""),"
"0","         category.casualty = str_detect(Category, ""Casualty""),"
"0","         category.general = str_detect(Category, ""General""),"
"0","         category.erm = str_detect(Category, ""ERM""),"
"0","         category.pension = str_detect(Category, ""Pension""),"
"0","         repealed = str_detect(Category, ""Repealed""),"
"0","         forthcoming = str_detect(Category, ""Soon-To-Be-Effective-ASOPs""),"
"0","         eff_date=lubridate::mdy(`Effective Date`),"
"0","         category.level = as_factor(str_replace_all(Category, ""[:space:]"", "", ""))) %>% "
"0","  select(-Category, -`Effective Date`)"
"0",""
"0",""
"0","# Finally we can stick this on the end of our existing table"
"0","final_asop_summary_table <- asop_table %>% "
"0","  left_join(asop_metadata) %>% "
"0","  select(-.)"
"2","Joining, by = ""asop_number"""
